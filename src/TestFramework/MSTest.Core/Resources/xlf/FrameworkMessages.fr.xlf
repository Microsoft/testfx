<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="fr" original="../FrameworkMessages.resx">
    <body>
      <trans-unit id="ElementNumbersDontMatch">
        <source>Le nombre d'éléments dans les collections ne correspond pas. Attendu : &lt;{1}&gt;, Réel : &lt;{2}&gt;.{0}</source>
        <target state="new">Le nombre d'éléments dans les collections ne correspond pas. Attendu : &lt;{1}&gt;, Réel : &lt;{2}&gt;.{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsMatchFail">
        <source>La chaîne '{0}' ne correspond pas au modèle '{1}'. {2}.</source>
        <target state="new">La chaîne '{0}' ne correspond pas au modèle '{1}'. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsInstanceOfFailMsg">
        <source>{0}Type attendu :&lt;{1}&gt;. Type réel :&lt;{2}&gt;.</source>
        <target state="new">{0}Type attendu :&lt;{1}&gt;. Type réel :&lt;{2}&gt;.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ContainsFail">
        <source>La chaîne '{0}' ne contient pas la chaîne '{1}'. {2}.</source>
        <target state="new">La chaîne '{0}' ne contient pas la chaîne '{1}'. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InternalObjectNotValid">
        <source>L'objet interne référencé n'est plus valide.</source>
        <target state="new">L'objet interne référencé n'est plus valide.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="StartsWithFail">
        <source>La chaîne '{0}' ne commence pas par la chaîne '{1}'. {2}.</source>
        <target state="new">La chaîne '{0}' ne commence pas par la chaîne '{1}'. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDifferentTypesFailMsg">
        <source>Attendu : &lt;{1} ({2})&gt;, Réel : &lt;{3} ({4})&gt;. {0}</source>
        <target state="new">Attendu : &lt;{1} ({2})&gt;, Réel : &lt;{3} ({4})&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothSameElements">
        <source>Les deux collections contiennent les mêmes éléments. {0}</source>
        <target state="new">Les deux collections contiennent les mêmes éléments. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidParameterToAssert">
        <source>Le paramètre '{0}' n'est pas valide. {1}.</source>
        <target state="new">Le paramètre '{0}' n'est pas valide. {1}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualDeltaFailMsg">
        <source>Différence attendue supérieure à &lt;{3}&gt; comprise entre la valeur attendue &lt;{1}&gt; et la valeur réelle &lt;{2}&gt;. {0}</source>
        <target state="new">Différence attendue supérieure à &lt;{3}&gt; comprise entre la valeur attendue &lt;{1}&gt; et la valeur réelle &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ElementsAtIndexDontMatch">
        <source>Les éléments à l'index {0} ne correspondent pas.</source>
        <target state="new">Les éléments à l'index {0} ne correspondent pas.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameReference">
        <source>Les deux collections Reference pointent vers le même objet Collection. {0}</source>
        <target state="new">Les deux collections Reference pointent vers le même objet Collection. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AsyncUITestMethodNotSupported">
        <source>async TestMethod avec UITestMethodAttribute ne sont pas pris en charge. Supprimez async ou utilisez TestMethodAttribute.</source>
        <target state="new">async TestMethod avec UITestMethodAttribute ne sont pas pris en charge. Supprimez async ou utilisez TestMethodAttribute.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="PrivateAccessorConstructorNotFound">
        <source>
      Le constructeur doté de la signature spécifiée est introuvable. Vous devrez peut-être régénérer votre accesseur private,
      ou le membre est peut-être private et défini sur une classe de base. Si le dernier cas est vrai, vous devez transmettre le type
      qui définit le membre dans le constructeur de PrivateObject.
    </source>
        <target state="new">
      Le constructeur doté de la signature spécifiée est introuvable. Vous devrez peut-être régénérer votre accesseur private,
      ou le membre est peut-être private et défini sur une classe de base. Si le dernier cas est vrai, vous devez transmettre le type
      qui définit le membre dans le constructeur de PrivateObject.
    </target>
        <note></note>
      </trans-unit>
      <trans-unit id="AssertionFailed">
        <source>Échec de {0}. {1}</source>
        <target state="new">Échec de {0}. {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseAssertEquals">
        <source>Assert.Equals ne doit pas être utilisé pour les assertions. Utilisez Assert.AreEqual &amp; overloads à la place.</source>
        <target state="new">Assert.Equals ne doit pas être utilisé pour les assertions. Utilisez Assert.AreEqual &amp; overloads à la place.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoExceptionDefault">
        <source>La méthode de test n'a pas levé d'exception. Une exception était attendue par l'attribut {0} défini sur la méthode de test.</source>
        <target state="new">La méthode de test n'a pas levé d'exception. Une exception était attendue par l'attribut {0} défini sur la méthode de test.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_NullInMessages">
        <source>(null)</source>
        <target state="new">(null)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongExceptionDerivedAllowed">
        <source>La méthode de test a levé l'exception {0}, mais l'exception {1} (ou un type dérivé de cette dernière) était attendue. Message d'exception : {2}</source>
        <target state="new">La méthode de test a levé l'exception {0}, mais l'exception {1} (ou un type dérivé de cette dernière) était attendue. Message d'exception : {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ElementTypesAtIndexDontMatch2">
        <source>L'élément à l'index {1} est (null). Type attendu : &lt;{2}&gt;.{0}</source>
        <target state="new">L'élément à l'index {1} est (null). Type attendu : &lt;{2}&gt;.{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NoExceptionThrown">
        <source>Aucune exception levée. Exception {1} attendue. {0}</source>
        <target state="new">Aucune exception levée. Exception {1} attendue. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DataDrivenResultDisplayName">
        <source>{0} ({1})</source>
        <target state="new">{0} ({1})</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NoDataRow">
        <source>Aucun DataRowAttribute spécifié. Au moins un DataRowAttribute doit être défini avec DataTestMethodAttribute.</source>
        <target state="new">Aucun DataRowAttribute spécifié. Au moins un DataRowAttribute doit être défini avec DataTestMethodAttribute.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CollectionEqualReason">
        <source>{0}({1})</source>
        <target state="new">{0}({1})</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EqualsTesterInvalidArgs">
        <source>Argument non valide - EqualsTester ne peut pas utiliser de valeur null.</source>
        <target state="new">Argument non valide - EqualsTester ne peut pas utiliser de valeur null.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AccessStringInvalidSyntax">
        <source>La chaîne Access possède une syntaxe non valide.</source>
        <target state="new">La chaîne Access possède une syntaxe non valide.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ElementTypesAtIndexDontMatch">
        <source>L'élément à l'index {1} n'est pas du type attendu. Type attendu : &lt;{2}&gt;, Type réel : &lt;{3}&gt;.{0}</source>
        <target state="new">L'élément à l'index {1} n'est pas du type attendu. Type attendu : &lt;{2}&gt;, Type réel : &lt;{3}&gt;.{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ErrorInvalidCast">
        <source>Impossible de convertir un objet de type {0} en {1}.</source>
        <target state="new">Impossible de convertir un objet de type {0} en {1}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualFailMsg">
        <source>Toute valeur attendue sauf :&lt;{1}&gt;. Réel :&lt;{2}&gt;. {0}</source>
        <target state="new">Toute valeur attendue sauf :&lt;{1}&gt;. Réel :&lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoException">
        <source>La méthode de test n'a pas levé l'exception attendue {0}. {1}</source>
        <target state="new">La méthode de test n'a pas levé l'exception attendue {0}. {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNotMatchFail">
        <source>La chaîne '{0}' correspond au modèle '{1}'. {2}.</source>
        <target state="new">La chaîne '{0}' correspond au modèle '{1}'. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongException">
        <source>La méthode de test a levé l'exception {0}, mais l'exception {1} était attendue. Message d'exception : {2}</source>
        <target state="new">La méthode de test a levé l'exception {0}, mais l'exception {1} était attendue. Message d'exception : {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="WrongExceptionThrown">
        <source>L'exception {2} a été levée, mais l'exception {1} était attendue. {0}
Message d'exception : {3}
Trace de la pile : {4}</source>
        <target state="new">L'exception {2} a été levée, mais l'exception {1} était attendue. {0}
Message d'exception : {3}
Trace de la pile : {4}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNotInstanceOfFailMsg">
        <source>Type incorrect : &lt;{1}&gt;, Type réel : &lt;{2}&gt;. {0}</source>
        <target state="new">Type incorrect : &lt;{1}&gt;, Type réel : &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDeltaFailMsg">
        <source>Différence attendue non supérieure à &lt;{3}&gt; comprise entre la valeur attendue &lt;{1}&gt; et la valeur réelle &lt;{2}&gt;. {0}</source>
        <target state="new">Différence attendue non supérieure à &lt;{3}&gt; comprise entre la valeur attendue &lt;{1}&gt; et la valeur réelle &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_FailedToGetExceptionMessage">
        <source>(Échec de la réception du message pour une exception de type {0} en raison d'une exception.)</source>
        <target state="new">(Échec de la réception du message pour une exception de type {0} en raison d'une exception.)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AllItemsAreUniqueFailMsg">
        <source>Un élément dupliqué a été trouvé : &lt;{1}&gt;. {0}</source>
        <target state="new">Un élément dupliqué a été trouvé : &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_ObjectString">
        <source>(objet)</source>
        <target state="new">(objet)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EndsWithFail">
        <source>La chaîne '{0}' ne se termine pas par la chaîne '{1}'. {2}.</source>
        <target state="new">La chaîne '{0}' ne se termine pas par la chaîne '{1}'. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NumberOfElementsDiff">
        <source>Nombre d'éléments différent.</source>
        <target state="new">Nombre d'éléments différent.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NullParameterToAssert">
        <source>Le paramètre '{0}' n'est pas valide. La valeur ne peut pas être null. {1}.</source>
        <target state="new">Le paramètre '{0}' n'est pas valide. La valeur ne peut pas être null. {1}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameElements">
        <source>Les deux collections contiennent des éléments identiques.</source>
        <target state="new">Les deux collections contiennent des éléments identiques.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsEmpty">
        <source>Les deux collections sont vides. {0}</source>
        <target state="new">Les deux collections sont vides. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualCaseFailMsg">
        <source>Attendu :&lt;{1}&gt;. La casse est différente pour la valeur réelle :&lt;{2}&gt;. {0}</source>
        <target state="new">Attendu :&lt;{1}&gt;. La casse est différente pour la valeur réelle :&lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidPropertyType">
        <source>La propriété {0} possède le type {1} ; type attendu {2}.</source>
        <target state="new">La propriété {0} possède le type {1} ; type attendu {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreSameGivenValues">
        <source>Ne passez pas de types valeur à AreSame(). Les valeurs converties en Object ne seront plus jamais les mêmes. Si possible, utilisez AreEqual(). {0}</source>
        <target state="new">Ne passez pas de types valeur à AreSame(). Les valeurs converties en Object ne seront plus jamais les mêmes. Si possible, utilisez AreEqual(). {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_ExpectedExceptionTypeMustDeriveFromException">
        <source>Le type de l'exception attendue doit être System.Exception ou un type dérivé de System.Exception.</source>
        <target state="new">Le type de l'exception attendue doit être System.Exception ou un type dérivé de System.Exception.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualFailMsg">
        <source>Attendu : &lt;{1}&gt;, Réel : &lt;{2}&gt;. {0}</source>
        <target state="new">Attendu : &lt;{1}&gt;, Réel : &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ActualHasMismatchedElements">
        <source>La collection attendue contient {1} occurrence(s) de &lt;{2}&gt;. La collection réelle contient {3} occurrence(s). {0}</source>
        <target state="new">La collection attendue contient {1} occurrence(s) de &lt;{2}&gt;. La collection réelle contient {3} occurrence(s). {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="PrivateAccessorMemberNotFound">
        <source>
      Le membre spécifié ({0}) est introuvable. Vous devrez peut-être régénérer votre accesseur private,
      ou le membre est peut-être private et défini sur une classe de base. Si le dernier cas est vrai, vous devez transmettre le type
      qui définit le membre dans le constructeur de PrivateObject.
    </source>
        <target state="new">
      Le membre spécifié ({0}) est introuvable. Vous devrez peut-être régénérer votre accesseur private,
      ou le membre est peut-être private et défini sur une classe de base. Si le dernier cas est vrai, vous devez transmettre le type
      qui définit le membre dans le constructeur de PrivateObject.
    </target>
        <note></note>
      </trans-unit>
    </body>
  </file>
</xliff>